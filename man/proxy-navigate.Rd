% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proxy.R
\name{proxy-navigate}
\alias{proxy-navigate}
\alias{cal_proxy_next}
\alias{cal_proxy_prev}
\alias{cal_proxy_today}
\title{Navigate into a calendar with Proxy}
\usage{
cal_proxy_next(proxy)

cal_proxy_prev(proxy)

cal_proxy_today(proxy)
}
\arguments{
\item{proxy}{A \code{\link{calendarProxy}} \code{htmlwidget} object.}
}
\description{
Those functions allow to navigate in the calendar from the server in a Shiny application.
}
\examples{
if (interactive()) {
  library(shiny)
  
  ui <- fluidPage(
    tags$h2("Navigate in calendar with actionButtons"),
    actionButton(
      inputId = "prev", 
      label = "Previous"
    ),
    actionButton(
      inputId = "next_", 
      label = "Next"
    ),
    actionButton(
      inputId = "today", 
      label = "Today"
    ),
    calendarOutput(outputId = "my_calendar")
  )
  
  server <- function(input, output, session) {
    
    output$my_calendar <- renderCalendar({
      calendar(defaultView = "month", useNav = FALSE)
    })
    
    observeEvent(input$prev, cal_proxy_prev("my_calendar"))
    observeEvent(input$next_, cal_proxy_next("my_calendar"))
    observeEvent(input$today, cal_proxy_today("my_calendar"))
    
  }
  
  shinyApp(ui, server)
}
}
